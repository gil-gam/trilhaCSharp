@model IPageViewModel

^@{ 
    var prevDisable = Model.PageIndex == 1 ? "disabled" : "";
    var nextDisable = Model.PageIndex == (int)Model.TotalPages ? "disabled" : "";
}

<nav>
    <ul class="pagination pagination-rounded mb-0">
        <li class="page-item @prevDisable">
            <a class="page-link" asp-action="@Model.ReferenceAction" asp-route-pageSize="@Model.PageSize" asp-route-pageIndex="@(Model.PageIndex - 1)" asp-route-query="@Model.Query" aria-label="Previous">
                <span aria-hidden="true">&laquo;</span>
            </a>
            </li>
        @for (var i = 1; i < Model.TotalPages + 1; i++)
        {
            if (i == Model.PageIndex)
            {
                <li class="page-item active"><a class="page-link" asp-action="@Model.ReferenceAction" asp-route-pageSize="@Model.PageSize" asp-route-pageIndex="@i" asp-route-query="@Model.Query"> @i </a></li>
            }
            else
            {
                <li class="page-item"><a class="page-link" asp-action="@Model.ReferenceAction" asp-route-pageSize="@Model.PageSize" asp-route-pageIndex="@i" asp-route-query="@Model.Query"> @i </a></li>
            }
        }

        <li class="page-item @nextDisable">
            <a class="page-link" asp-action="@Model.ReferenceAction" asp-route-pageSize="@Model.PageSize" asp-route-pageIndex="@(Model.PageIndex + 1)" asp-route-query="@Model.Query" aria-label="Next">
                <span aria-hidden="true">&raquo;</span>
            </a>
        </li>        
    </ul>
</nav>